  # version: '3.8'

  # services:
  #   api:
  #     build:
  #       context: .
  #       # Pass DATABASE_URL as a build-time secret
  #       secrets:
  #         - database_url
  #     ports:
  #       - "3001:3001"
  #     # Also load the .env file for runtime
  #     env_file:
  #       - .env

  # # Define the secret source
  # secrets:
  #   database_url:
  #     file: .env

# version: '3.8'

# services:
#   api:
#     build:
#       context: .
#       secrets:
#         - database_url
#     ports:
#       - "3001:3001"
#     env_file:
#       - .env
#     environment:
#       - BROWSER_WS_ENDPOINT=ws://browser:3002
#     depends_on:
#       - browser
#     networks:
#       - app-network

#   browser:
#     image: browserless/chrome:latest
#     ports:
#       - "3002:3000"  # Optional: expose for debugging
#     environment:
#       - MAX_CONCURRENT_SESSIONS=10
#       - MAX_QUEUE_LENGTH=20
#       - PREBOOT_CHROME=true
#       - KEEP_ALIVE=true
#       - CHROME_REFRESH_TIME=3600000
#       - DEFAULT_BLOCK_ADS=true
#       - DEFAULT_HEADLESS=true
#       - DEFAULT_LAUNCH_ARGS=["--no-sandbox", "--disable-setuid-sandbox", "--disable-dev-shm-usage", "--disable-gpu", "--no-first-run", "--no-zygote", "--single-process", "--disable-web-security"]

#     networks:
#       - app-network

# networks:
#   app-network:
#     driver: bridge

# secrets:
#   database_url:
#     file: .env

# docker-compose.dev.yml
# version: '3.8'

# services:
#   browser:
#     image: browserless/chrome:latest
#     ports:
#       - "3002:3000"
#     shm_size: '2gb'       # CRITICAL: Increase shared memory size
#     mem_limit: '3g'       # Optional but recommended: Give the container a 4GB memory limit
#     mem_reservation: '2g' # Optional but recommended: Reserve 2GB of memory for it
#     environment:
#       - DEBUG=browserless*
#       - KEEP_ALIVE=true
#       - MAX_CONCURRENT_SESSIONS=10
#       - PREBOOT_CHROME=true
#       - DEFAULT_LAUNCH_ARGS=["--no-sandbox", "--disable-setuid-sandbox", "--disable-dev-shm-usage", "--disable-gpu", "--no-first-run", "--no-zygote", "--single-process", "--disable-web-security"]

#       # - DEFAULT_LAUNCH_ARGS=["--disable-web-security", "--disable-features=IsolateOrigins", "--disable-site-isolation-trials"]
#       # - KEEP_ALIVE=true

# version: '3.8'

services:
  app:
    build: .
    ports:
      - "3001:3001"
    env_file: ".env" # Tells Docker Compose to load variables from the .env file1
    environment:
      - NODE_ENV=production
      - BROWSER_WS_ENDPOINT=ws://browserless:3000
    depends_on:
      - browserless
    # depends_on:
    #   browserless:
    #     condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  browserless:
    image: browserless/chrome:latest
    ports:
      - "3002:3000"
    shm_size: '2gb'       # CRITICAL: Increase shared memory size
    mem_limit: '3g'       # Optional but recommended: Give the container a 4GB memory limit
    mem_reservation: '2g' # Optional but recommended: Reserve 2GB of memory for it
    environment:
      - DEBUG=browserless*
      - KEEP_ALIVE=true
      - MAX_CONCURRENT_SESSIONS=10
      - PREBOOT_CHROME=true
      - DEFAULT_LAUNCH_ARGS=["--no-sandbox", "--disable-setuid-sandbox", "--disable-dev-shm-usage", "--disable-gpu", "--no-first-run", "--no-zygote", "--single-process", "--disable-web-security"]
      # API-focused configuration
      # - FUNCTION_ENABLE_INCOMINGMESSAGES=true
      # - FUNCTION_DISABLE_AUTO_SET_DOWNLOAD_BEHAVIOR=false
      # - DEFAULT_STEALTH=true
      # - CONNECTION_TIMEOUT=60000
      # - MAX_CONCURRENT_SESSIONS=10
      # - MAX_QUEUE_LENGTH=10
      # - PREBOOT_CHROME=true
      # - KEEP_ALIVE=true
      # - DEFAULT_LAUNCH_ARGS=["--no-sandbox", "--disable-setuid-sandbox", "--disable-dev-shm-usage", "--disable-gpu", "--no-first-run", "--no-zygote", "--single-process", "--disable-web-security"]

    networks:
      - app-network
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3000/pressure"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

networks:
  app-network:
    driver: bridge